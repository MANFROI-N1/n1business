-- Tabela para armazenar as conversas
CREATE TABLE public."IAConversations" (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  user_id text not null,
  agent_type text not null, -- 'Templates', 'Campanhas', 'Eventos', 'Relatorios'
  title text null,
  status text not null default 'active', -- 'active', 'archived'
  metadata jsonb null,
  constraint IAConversations_pkey primary key (id)
) TABLESPACE pg_default;

-- Tabela para armazenar as mensagens de cada conversa
CREATE TABLE public."IAMessages" (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  conversation_id bigint not null references public."IAConversations"(id) on delete cascade,
  content text not null,
  sender text not null, -- 'user', 'agent'
  status text not null default 'sent', -- 'sending', 'sent', 'error'
  attachments jsonb null, -- array de URLs ou metadados de anexos
  metadata jsonb null, -- dados adicionais como tokens, modelo usado, etc.
  constraint IAMessages_pkey primary key (id)
) TABLESPACE pg_default;

-- Tabela para armazenar configurações dos agentes
CREATE TABLE public."IAAgentSettings" (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  agent_type text not null unique, -- 'Templates', 'Campanhas', 'Eventos', 'Relatorios'
  model text not null default 'gpt-3.5-turbo', -- modelo de IA a ser usado
  system_prompt text not null, -- prompt de sistema que define o comportamento do agente
  temperature numeric not null default 0.7,
  max_tokens integer not null default 1000,
  enabled boolean not null default true,
  metadata jsonb null,
  constraint IAAgentSettings_pkey primary key (id)
) TABLESPACE pg_default;

-- Tabela para armazenar ações realizadas pelos agentes
CREATE TABLE public."IAAgentActions" (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  message_id bigint not null references public."IAMessages"(id) on delete cascade,
  action_type text not null, -- 'create_template', 'schedule_campaign', etc.
  status text not null default 'pending', -- 'pending', 'completed', 'failed'
  result jsonb null, -- resultado da ação
  metadata jsonb null,
  constraint IAAgentActions_pkey primary key (id)
) TABLESPACE pg_default;

-- Inserir configurações iniciais para os agentes
INSERT INTO public."IAAgentSettings" 
  (agent_type, system_prompt, temperature, max_tokens)
VALUES
  (
    'Templates', 
    'Você é um assistente especializado em ajudar a criar e gerenciar templates de WhatsApp para marketing. Você conhece as melhores práticas para criar mensagens eficazes e que seguem as diretrizes do WhatsApp Business API. Ajude o usuário a criar templates que sejam claros, diretos e que tenham uma boa taxa de entrega e engajamento.',
    0.7,
    1000
  ),
  (
    'Campanhas', 
    'Você é um assistente especializado em campanhas de marketing por WhatsApp. Você ajuda a planejar, criar e analisar campanhas, fornecendo insights sobre segmentação, timing, mensagens e métricas de sucesso. Seu objetivo é maximizar o ROI das campanhas de marketing do usuário.',
    0.7,
    1000
  ),
  (
    'Eventos', 
    'Você é um assistente especializado em gerenciamento de eventos e agendamentos via WhatsApp. Você ajuda a criar, programar e gerenciar eventos, lembretes e notificações. Seu objetivo é garantir que os eventos sejam bem organizados e que os participantes recebam as informações necessárias no momento certo.',
    0.7,
    1000
  ),
  (
    'Relatorios', 
    'Você é um assistente especializado em análise de dados e relatórios de marketing por WhatsApp. Você ajuda a interpretar métricas, identificar tendências e fornecer insights acionáveis. Seu objetivo é ajudar o usuário a entender o desempenho de suas campanhas e tomar decisões baseadas em dados.',
    0.7,
    1000
  );

-- Criar índices para melhorar a performance
CREATE INDEX idx_ia_conversations_user_id ON public."IAConversations" (user_id);
CREATE INDEX idx_ia_conversations_agent_type ON public."IAConversations" (agent_type);
CREATE INDEX idx_ia_messages_conversation_id ON public."IAMessages" (conversation_id);
CREATE INDEX idx_ia_agent_actions_message_id ON public."IAAgentActions" (message_id);

-- Criar políticas de segurança RLS (Row Level Security)
ALTER TABLE public."IAConversations" ENABLE ROW LEVEL SECURITY;
ALTER TABLE public."IAMessages" ENABLE ROW LEVEL SECURITY;
ALTER TABLE public."IAAgentSettings" ENABLE ROW LEVEL SECURITY;
ALTER TABLE public."IAAgentActions" ENABLE ROW LEVEL SECURITY;

-- Políticas para IAConversations
CREATE POLICY "Usuários podem ver apenas suas próprias conversas"
  ON public."IAConversations"
  FOR SELECT
  USING (auth.uid()::text = user_id);

CREATE POLICY "Usuários podem inserir suas próprias conversas"
  ON public."IAConversations"
  FOR INSERT
  WITH CHECK (auth.uid()::text = user_id);

CREATE POLICY "Usuários podem atualizar apenas suas próprias conversas"
  ON public."IAConversations"
  FOR UPDATE
  USING (auth.uid()::text = user_id);

-- Políticas para IAMessages
CREATE POLICY "Usuários podem ver mensagens de suas próprias conversas"
  ON public."IAMessages"
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM public."IAConversations"
      WHERE id = public."IAMessages".conversation_id
      AND user_id = auth.uid()::text
    )
  );

CREATE POLICY "Usuários podem inserir mensagens em suas próprias conversas"
  ON public."IAMessages"
  FOR INSERT
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM public."IAConversations"
      WHERE id = public."IAMessages".conversation_id
      AND user_id = auth.uid()::text
    )
  );

-- Políticas para IAAgentSettings (apenas administradores podem gerenciar)
CREATE POLICY "Apenas administradores podem gerenciar configurações de agentes"
  ON public."IAAgentSettings"
  USING (
    EXISTS (
      SELECT 1 FROM public."Users"
      WHERE id = auth.uid()
      AND role = 'admin'
    )
  );

-- Políticas para IAAgentActions
CREATE POLICY "Usuários podem ver ações relacionadas às suas mensagens"
  ON public."IAAgentActions"
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM public."IAMessages" m
      JOIN public."IAConversations" c ON m.conversation_id = c.id
      WHERE m.id = public."IAAgentActions".message_id
      AND c.user_id = auth.uid()::text
    )
  );
